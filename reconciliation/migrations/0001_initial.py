# Generated by Django 4.2.23 on 2025-08-06 04:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileUploadStatus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='uploaded', max_length=20)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('processed_records', models.PositiveIntegerField(default=0)),
                ('failed_records', models.PositiveIntegerField(default=0)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('processing_metadata', models.JSONField(default=dict)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reconciliation_fileuploadstatus',
            },
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_date', models.DateField()),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_type', models.CharField(blank=True, max_length=50, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('status', models.CharField(choices=[('unmatched', 'Unmatched'), ('matched', 'Matched'), ('partially_matched', 'Partially Matched'), ('disputed', 'Disputed'), ('ignored', 'Ignored')], default='unmatched', max_length=20)),
                ('raw_data', models.JSONField(default=dict)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_transactions', to='core.company')),
                ('file_upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='reconciliation.fileuploadstatus')),
            ],
            options={
                'db_table': 'reconciliation_banktransaction',
            },
        ),
        migrations.CreateModel(
            name='ReconciliationSummary',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('matched_transactions', models.PositiveIntegerField(default=0)),
                ('unmatched_transactions', models.PositiveIntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('matched_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('ml_matches', models.PositiveIntegerField(default=0)),
                ('manual_matches', models.PositiveIntegerField(default=0)),
                ('average_confidence', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reconciliation_reconciliationsummary',
                'indexes': [models.Index(fields=['company', 'period_start'], name='reconciliat_company_02618c_idx')],
                'unique_together': {('company', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='ReconciliationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('matched_by', models.CharField(choices=[('manual', 'Manual'), ('ml_auto', 'ML Automatic'), ('rule_based', 'Rule Based'), ('partial', 'Partial Match')], max_length=20)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('amount_matched', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation_logs', to='core.invoice')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation_logs', to='reconciliation.banktransaction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reconciliation_reconciliationlog',
                'indexes': [models.Index(fields=['transaction', 'is_active'], name='reconciliat_transac_73311e_idx'), models.Index(fields=['invoice', 'is_active'], name='reconciliat_invoice_06429c_idx'), models.Index(fields=['matched_by', 'confidence_score'], name='reconciliat_matched_bef8ef_idx'), models.Index(fields=['created_at'], name='reconciliat_created_5fa244_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLModelVersion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=50)),
                ('model_path', models.CharField(max_length=500)),
                ('training_data_count', models.PositiveIntegerField()),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('precision_score', models.FloatField(blank=True, null=True)),
                ('recall_score', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('training_metadata', models.JSONField(default=dict)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_models', to='core.company')),
            ],
            options={
                'db_table': 'reconciliation_mlmodelversion',
                'indexes': [models.Index(fields=['company', 'is_active'], name='reconciliat_company_0620be_idx'), models.Index(fields=['accuracy_score'], name='reconciliat_accurac_aca805_idx')],
                'unique_together': {('company', 'version')},
            },
        ),
        migrations.CreateModel(
            name='MatchingRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('exact_reference', 'Exact Reference Match'), ('amount_date', 'Amount and Date Match'), ('description_pattern', 'Description Pattern Match'), ('customer_reference', 'Customer Reference Match'), ('custom', 'Custom Rule')], max_length=30)),
                ('conditions', models.JSONField()),
                ('priority', models.PositiveIntegerField(default=100)),
                ('is_active', models.BooleanField(default=True)),
                ('success_count', models.PositiveIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_rules', to='core.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reconciliation_matchingrule',
                'ordering': ['priority', 'name'],
                'indexes': [models.Index(fields=['company', 'is_active', 'priority'], name='reconciliat_company_03e809_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='fileuploadstatus',
            index=models.Index(fields=['company', 'status'], name='reconciliat_company_5b5ce6_idx'),
        ),
        migrations.AddIndex(
            model_name='fileuploadstatus',
            index=models.Index(fields=['user', 'created_at'], name='reconciliat_user_id_0bc351_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['company', 'status'], name='reconciliat_company_25da51_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['transaction_date'], name='reconciliat_transac_e125e8_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['reference_number'], name='reconciliat_referen_d3e7b4_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['amount'], name='reconciliat_amount_a77524_idx'),
        ),
    ]
